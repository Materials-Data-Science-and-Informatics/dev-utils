{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Helper utilities for development, used from other repositories.</p>"},{"location":"#acknowledgements","title":"Acknowledgements","text":"<p>We kindly thank all contributors.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>Here we provide notes that summarize the most important changes in each released version.</p> <p>Please consult the changelog to inform yourself about breaking changes and security issues.</p>"},{"location":"changelog/#0.1.0","title":"v0.1.0 (2023-04-25)","text":"<ul> <li>Added update_codemeta script to work around codemetapy limitations and problems</li> <li>https://github.com/proycon/codemetapy/issues/38</li> <li>https://github.com/proycon/codemetapy/issues/39</li> </ul>"},{"location":"code_of_conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the project maintainers by e-mail. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"contributing/","title":"How To Contribute","text":"<p>All kinds of contributions are very welcome! You can contribute in various ways, e.g. by:</p> <ul> <li>providing feedback</li> <li>asking questions</li> <li>suggesting ideas</li> <li>implementing features</li> <li>fixing problems</li> <li>improving documentation</li> </ul>"},{"location":"contributing/#ideas-questions-and-problems","title":"Ideas, Questions and Problems","text":"<p>If you have questions or difficulties using this software, please use the issue tracker.</p> <p>If your topic is not already covered by an existing issue, please create a new issue using one of the provided issue templates.</p> <p>If your issue is caused by incomplete, unclear or outdated documentation, we are also happy to get suggestions on how to improve it. Outdated or incorrect documentation is a bug, while missing documentation is a feature request.</p> <p>NOTE: If you want to report a highly critical security problem, do not open an issue! Instead, please create a private security advisory, or contact the current package maintainers directly by e-mail.</p>"},{"location":"contributing/#development","title":"Development","text":"<p>This project uses Poetry for dependency management.</p> <p>You can run the following lines to check out the project and prepare it for development:</p> <pre><code>git clone git@github.com:Materials-Data-Science-and-Informatics/dev-utils.git\ncd dev-utils\npoetry install --with docs\npoetry poe init-dev\n</code></pre> <p>Common tasks are accessible via poe:</p> <ul> <li> <p>Use <code>poetry poe lint</code> to run linters manually, add <code>--all-files</code> to check everything.</p> </li> <li> <p>Use <code>poetry poe test</code> to run tests, add <code>--cov</code> to also show test coverage.</p> </li> <li> <p>Use <code>poetry poe docs</code> to generate local documentation</p> </li> </ul> <p>In order to contribute code, please open a pull request to the <code>dev</code> branch.</p> <p>Before opening the PR, please make sure that your changes</p> <ul> <li>are sufficiently covered by meaningful tests,</li> <li>are reflected in suitable documentation (API docs, guides, etc.), and</li> <li>successfully pass all pre-commit hooks.</li> </ul>"},{"location":"coverage/","title":"Coverage Report","text":""},{"location":"credits/","title":"Authors and Contributors","text":"<p>Main authors are persons whose contributions significantly shaped the state of the software at some point in time.</p> <p>Additional contributors are persons who are not main authors, but contributed non-trivially to this project, e.g. by providing smaller fixes and enhancements to the code and/or documentation. Of course, this is just a rough overview and categorization. For a more complete overview of all contributors and contributions, please inspect the git history of this repository.</p>"},{"location":"credits/#main-authors","title":"Main Authors","text":"<ul> <li>Anton Pirogov (FZJ, E-Mail, ORCID): original author</li> </ul>"},{"location":"credits/#additional-contributions","title":"Additional Contributions","text":"<p>... and maybe you?</p>"},{"location":"license/","title":"License","text":"<p>Unless stated otherwise, all code provided by this project (excluding external dependencies) is distributed under the following license:</p> <pre><code>MIT License\n\nCopyright (c) 2023 Forschungszentrum J\u00fclich GmbH - Institute for Materials Data Science and Informatics (IAS9) - Stefan Sandfeld &lt;s.sandfeld@fz-juelich.de&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre> <p>This project is REUSE compliant. The following detailed license and copyright information in DEP5 format can also be found in the <code>.reuse/dep5</code> file in the project source directory:</p> <pre><code>Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\nUpstream-Name: dev-utils\nUpstream-Contact: Anton Pirogov &lt;a.pirogov@fz-juelich.de&gt;\nSource: https://github.com/Materials-Data-Science-and-Informatics/dev-utils\n\nFiles: .gitignore pyproject.toml poetry.lock .pre-commit-config.yaml .pre-commit-hooks.yaml codemeta.json CITATION.cff README.md RELEASE_NOTES.md CHANGELOG.md CODE_OF_CONDUCT.md AUTHORS.md CONTRIBUTING.md .gitlab-ci.yml .gitlab/* .github/* mkdocs.yml docs/*\nCopyright: 2023 Forschungszentrum J\u00fclich GmbH - Institute for Materials Data Science and Informatics (IAS9) - Stefan Sandfeld &lt;s.sandfeld@fz-juelich.de&gt;\nLicense: CC0-1.0\n\nFiles: src/dev_utils/* tests/*\nCopyright: 2023 Forschungszentrum J\u00fclich GmbH - Institute for Materials Data Science and Informatics (IAS9) - Stefan Sandfeld &lt;s.sandfeld@fz-juelich.de&gt;\nLicense: MIT\n</code></pre>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#getting-started","title":"Getting Started","text":""},{"location":"quickstart/#update-codemeta","title":"update-codemeta","text":"<p>The <code>update-codemeta</code> pre-commit hook uses <code>codemetapy</code> to generate or update a <code>codemeta.json</code> based on metadata in your <code>pyproject.toml</code>.</p> <p>You can use it by adding the following snippet to your <code>.pre-commit-config.yaml</code>:</p> <pre><code>todo:\n- add snippet\n</code></pre>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>dev_utils<ul> <li>update_codemeta</li> </ul> </li> </ul>"},{"location":"reference/dev_utils/","title":"dev_utils","text":"<p>Top level module of the project.</p>"},{"location":"reference/dev_utils/update_codemeta/","title":"update_codemeta","text":"<p>Shallow wrapper around codemetapy to use it with pre-commit.</p>"},{"location":"reference/dev_utils/update_codemeta/#dev_utils.update_codemeta.gen_codemeta","title":"<code>gen_codemeta(sources, *, with_entrypoints=False)</code>","text":"<p>Run codemeta file generation using Python API.</p> <p>Returns JSON-LD dict.</p> Source code in <code>src/dev_utils/update_codemeta.py</code> <pre><code>def gen_codemeta(sources, *, with_entrypoints: bool = False):\n\"\"\"Run codemeta file generation using Python API.\n\n    Returns JSON-LD dict.\n    \"\"\"\n    supp_inputs = set([\"codemeta.json\", \"pyproject.toml\"])\n    req_inputs = supp_inputs.intersection(set(sources))\n    eff_inputs = [p for p in req_inputs if Path(p).is_file()]\n    print(Path(\".\").absolute())\n    print(Path(\"pyproject.toml\").absolute())\n    print(Path(\"pyproject.toml\").absolute().is_file())\n    print(\"req\", req_inputs)\n    print(\"eff\", eff_inputs)\n\n    g, res, args, _ = build(\n        inputsources=eff_inputs,\n        output=\"json\",\n        with_entrypoints=with_entrypoints,\n    )\n    return serialize_to_jsonld(g, res, args)\n</code></pre>"},{"location":"reference/dev_utils/update_codemeta/#dev_utils.update_codemeta.localize_codemeta_context","title":"<code>localize_codemeta_context(json)</code>","text":"<p>Prevent rdflib external context resolution by adding it from a file.</p> Source code in <code>src/dev_utils/update_codemeta.py</code> <pre><code>def localize_codemeta_context(json):\n\"\"\"Prevent rdflib external context resolution by adding it from a file.\"\"\"\n    ctx = set(json.get(\"@context\") or [])\n    if not ctx:\n        return json  # probably empty or not codemeta, nothing to do\n    if ctx != codemeta_context:\n        raise RuntimeError(f\"Unexpected codemeta context: {json['@context']}\")\n    ret = dict(json)\n    ret.update({\"@context\": cached_context})\n    return ret\n</code></pre>"},{"location":"reference/dev_utils/update_codemeta/#dev_utils.update_codemeta.serialize_codemeta","title":"<code>serialize_codemeta(cm)</code>","text":"<p>Convert JSON Dict to str (using settings like codemetapy).</p> Source code in <code>src/dev_utils/update_codemeta.py</code> <pre><code>def serialize_codemeta(cm) -&gt; str:\n\"\"\"Convert JSON Dict to str (using settings like codemetapy).\"\"\"\n    # using settings like in codemetapy\n    return json.dumps(cm, indent=4, ensure_ascii=False, sort_keys=True)\n</code></pre>"}]}